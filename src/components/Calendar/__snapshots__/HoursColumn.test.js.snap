// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HoursColumn renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HoursColumn
    classes={
      Object {
        "hours": "",
        "hoursColumn": "",
        "hoursColumnContainer": "",
        "hoursSpacer": "",
      }
    }
    hours={
      Array [
        1,
        2,
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className=""
        />,
        <div
          className=""
        >
          <WithStyles(Typography)
            align="right"
            className=""
            variant="body1"
          >
            1am
          </WithStyles(Typography)>
          <WithStyles(Typography)
            align="right"
            className=""
            variant="body1"
          >
            2am
          </WithStyles(Typography)>
        </div>,
      ],
      "className": "",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              align="right"
              className=""
              variant="body1"
            >
              1am
            </WithStyles(Typography)>,
            <WithStyles(Typography)
              align="right"
              className=""
              variant="body1"
            >
              2am
            </WithStyles(Typography)>,
          ],
          "className": "",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "class",
            "props": Object {
              "align": "right",
              "children": "1am",
              "className": "",
              "variant": "body1",
            },
            "ref": null,
            "rendered": "1am",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "class",
            "props": Object {
              "align": "right",
              "children": "2am",
              "className": "",
              "variant": "body1",
            },
            "ref": null,
            "rendered": "2am",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className=""
          />,
          <div
            className=""
          >
            <WithStyles(Typography)
              align="right"
              className=""
              variant="body1"
            >
              1am
            </WithStyles(Typography)>
            <WithStyles(Typography)
              align="right"
              className=""
              variant="body1"
            >
              2am
            </WithStyles(Typography)>
          </div>,
        ],
        "className": "",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(Typography)
                align="right"
                className=""
                variant="body1"
              >
                1am
              </WithStyles(Typography)>,
              <WithStyles(Typography)
                align="right"
                className=""
                variant="body1"
              >
                2am
              </WithStyles(Typography)>,
            ],
            "className": "",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "class",
              "props": Object {
                "align": "right",
                "children": "1am",
                "className": "",
                "variant": "body1",
              },
              "ref": null,
              "rendered": "1am",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "class",
              "props": Object {
                "align": "right",
                "children": "2am",
                "className": "",
                "variant": "body1",
              },
              "ref": null,
              "rendered": "2am",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
