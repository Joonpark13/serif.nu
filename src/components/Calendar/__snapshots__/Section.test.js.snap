// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Section renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Section
    classes={
      Object {
        "container": "",
        "header": "",
        "paper": "",
        "text": "",
      }
    }
    dow="Mo"
    hour={10}
    section={
      Object {
        "course": "101-1",
        "id": "12345",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        className=""
      >
        <div
          className=""
        >
          <WithStyles(Typography)
            className=""
            variant="caption"
          >
            10:30 - 12:00
          </WithStyles(Typography)>
          <WithStyles(Typography)
            className=""
            variant="caption"
          >
            undefined undefined
          </WithStyles(Typography)>
        </div>
        <WithStyles(Typography)
          className=" undefined"
          noWrap={true}
          variant="subtitle2"
        />
      </div>,
      "className": "",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className=""
          >
            <WithStyles(Typography)
              className=""
              variant="caption"
            >
              10:30 - 12:00
            </WithStyles(Typography)>
            <WithStyles(Typography)
              className=""
              variant="caption"
            >
              undefined undefined
            </WithStyles(Typography)>
          </div>,
          <WithStyles(Typography)
            className=" undefined"
            noWrap={true}
            variant="subtitle2"
          />,
        ],
        "className": "",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(Typography)
                className=""
                variant="caption"
              >
                10:30 - 12:00
              </WithStyles(Typography)>,
              <WithStyles(Typography)
                className=""
                variant="caption"
              >
                undefined undefined
              </WithStyles(Typography)>,
            ],
            "className": "",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "10:30 - 12:00",
                "className": "",
                "variant": "caption",
              },
              "ref": null,
              "rendered": "10:30 - 12:00",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "undefined undefined",
                "className": "",
                "variant": "caption",
              },
              "ref": null,
              "rendered": "undefined undefined",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": undefined,
            "className": " undefined",
            "noWrap": true,
            "variant": "subtitle2",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className=""
        >
          <div
            className=""
          >
            <WithStyles(Typography)
              className=""
              variant="caption"
            >
              10:30 - 12:00
            </WithStyles(Typography)>
            <WithStyles(Typography)
              className=""
              variant="caption"
            >
              undefined undefined
            </WithStyles(Typography)>
          </div>
          <WithStyles(Typography)
            className=" undefined"
            noWrap={true}
            variant="subtitle2"
          />
        </div>,
        "className": "",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className=""
            >
              <WithStyles(Typography)
                className=""
                variant="caption"
              >
                10:30 - 12:00
              </WithStyles(Typography)>
              <WithStyles(Typography)
                className=""
                variant="caption"
              >
                undefined undefined
              </WithStyles(Typography)>
            </div>,
            <WithStyles(Typography)
              className=" undefined"
              noWrap={true}
              variant="subtitle2"
            />,
          ],
          "className": "",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <WithStyles(Typography)
                  className=""
                  variant="caption"
                >
                  10:30 - 12:00
                </WithStyles(Typography)>,
                <WithStyles(Typography)
                  className=""
                  variant="caption"
                >
                  undefined undefined
                </WithStyles(Typography)>,
              ],
              "className": "",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "10:30 - 12:00",
                  "className": "",
                  "variant": "caption",
                },
                "ref": null,
                "rendered": "10:30 - 12:00",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "undefined undefined",
                  "className": "",
                  "variant": "caption",
                },
                "ref": null,
                "rendered": "undefined undefined",
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": undefined,
              "className": " undefined",
              "noWrap": true,
              "variant": "subtitle2",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
