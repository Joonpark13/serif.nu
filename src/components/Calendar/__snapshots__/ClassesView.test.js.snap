// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ClassesView changes tabs correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ClassesView
    classes={
      Object {
        "tabWidth": "",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(Tabs)
          indicatorColor="primary"
          onChange={[Function]}
          textColor="primary"
          value="unscheduled"
        >
          <WithStyles(Tab)
            className=""
            label="Calendar"
            value="calendar"
          />
          <WithStyles(Tab)
            className=""
            label="Unscheduled Classes"
            value="unscheduled"
          />
        </WithStyles(Tabs)>,
        false,
        <WithStyles(UnscheduledClasses) />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Tab)
              className=""
              label="Calendar"
              value="calendar"
            />,
            <WithStyles(Tab)
              className=""
              label="Unscheduled Classes"
              value="unscheduled"
            />,
          ],
          "indicatorColor": "primary",
          "onChange": [Function],
          "textColor": "primary",
          "value": "unscheduled",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "label": "Calendar",
              "value": "calendar",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "label": "Unscheduled Classes",
              "value": "unscheduled",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(Tabs)
            indicatorColor="primary"
            onChange={[Function]}
            textColor="primary"
            value="unscheduled"
          >
            <WithStyles(Tab)
              className=""
              label="Calendar"
              value="calendar"
            />
            <WithStyles(Tab)
              className=""
              label="Unscheduled Classes"
              value="unscheduled"
            />
          </WithStyles(Tabs)>,
          false,
          <WithStyles(UnscheduledClasses) />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Tab)
                className=""
                label="Calendar"
                value="calendar"
              />,
              <WithStyles(Tab)
                className=""
                label="Unscheduled Classes"
                value="unscheduled"
              />,
            ],
            "indicatorColor": "primary",
            "onChange": [Function],
            "textColor": "primary",
            "value": "unscheduled",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "",
                "label": "Calendar",
                "value": "calendar",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "",
                "label": "Unscheduled Classes",
                "value": "unscheduled",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`ClassesView renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ClassesView
    classes={
      Object {
        "tabWidth": "",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(Tabs)
          indicatorColor="primary"
          onChange={[Function]}
          textColor="primary"
          value="calendar"
        >
          <WithStyles(Tab)
            className=""
            label="Calendar"
            value="calendar"
          />
          <WithStyles(Tab)
            className=""
            label="Unscheduled Classes"
            value="unscheduled"
          />
        </WithStyles(Tabs)>,
        <WithStyles(CalendarView) />,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Tab)
              className=""
              label="Calendar"
              value="calendar"
            />,
            <WithStyles(Tab)
              className=""
              label="Unscheduled Classes"
              value="unscheduled"
            />,
          ],
          "indicatorColor": "primary",
          "onChange": [Function],
          "textColor": "primary",
          "value": "calendar",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "label": "Calendar",
              "value": "calendar",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "label": "Unscheduled Classes",
              "value": "unscheduled",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(Tabs)
            indicatorColor="primary"
            onChange={[Function]}
            textColor="primary"
            value="calendar"
          >
            <WithStyles(Tab)
              className=""
              label="Calendar"
              value="calendar"
            />
            <WithStyles(Tab)
              className=""
              label="Unscheduled Classes"
              value="unscheduled"
            />
          </WithStyles(Tabs)>,
          <WithStyles(CalendarView) />,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Tab)
                className=""
                label="Calendar"
                value="calendar"
              />,
              <WithStyles(Tab)
                className=""
                label="Unscheduled Classes"
                value="unscheduled"
              />,
            ],
            "indicatorColor": "primary",
            "onChange": [Function],
            "textColor": "primary",
            "value": "calendar",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "",
                "label": "Calendar",
                "value": "calendar",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "",
                "label": "Unscheduled Classes",
                "value": "unscheduled",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
