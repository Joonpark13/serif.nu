// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NavDrawer should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NavDrawer
    closeFunc={[Function]}
    isOpen={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <WithStyles(List)>
        <WithStyles(ListItem)
          button={true}
        >
          <WithStyles(ListItemText)
            primary="Serif.nu"
          />
        </WithStyles(ListItem)>
        <WithStyles(ListItem)
          button={true}
        >
          <WithStyles(ListItemText)
            primary="About"
          />
        </WithStyles(ListItem)>
        <WithStyles(ListItem)
          button={true}
        >
          <WithStyles(ListItemText)
            primary="FAQ"
          />
        </WithStyles(ListItem)>
        <WithStyles(ListItem)
          button={true}
        >
          <WithStyles(ListItemText)
            primary="Report a Bug"
          />
        </WithStyles(ListItem)>
        <WithStyles(ListItem)
          button={true}
        >
          <WithStyles(ListItemText)
            primary="Contact"
          />
        </WithStyles(ListItem)>
      </WithStyles(List)>,
      "onClose": [Function],
      "open": true,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(ListItem)
            button={true}
          >
            <WithStyles(ListItemText)
              primary="Serif.nu"
            />
          </WithStyles(ListItem)>,
          <WithStyles(ListItem)
            button={true}
          >
            <WithStyles(ListItemText)
              primary="About"
            />
          </WithStyles(ListItem)>,
          <WithStyles(ListItem)
            button={true}
          >
            <WithStyles(ListItemText)
              primary="FAQ"
            />
          </WithStyles(ListItem)>,
          <WithStyles(ListItem)
            button={true}
          >
            <WithStyles(ListItemText)
              primary="Report a Bug"
            />
          </WithStyles(ListItem)>,
          <WithStyles(ListItem)
            button={true}
          >
            <WithStyles(ListItemText)
              primary="Contact"
            />
          </WithStyles(ListItem)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "button": true,
            "children": <WithStyles(ListItemText)
              primary="Serif.nu"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "primary": "Serif.nu",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "button": true,
            "children": <WithStyles(ListItemText)
              primary="About"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "primary": "About",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "button": true,
            "children": <WithStyles(ListItemText)
              primary="FAQ"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "primary": "FAQ",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "button": true,
            "children": <WithStyles(ListItemText)
              primary="Report a Bug"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "primary": "Report a Bug",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "button": true,
            "children": <WithStyles(ListItemText)
              primary="Contact"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "primary": "Contact",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(List)>
          <WithStyles(ListItem)
            button={true}
          >
            <WithStyles(ListItemText)
              primary="Serif.nu"
            />
          </WithStyles(ListItem)>
          <WithStyles(ListItem)
            button={true}
          >
            <WithStyles(ListItemText)
              primary="About"
            />
          </WithStyles(ListItem)>
          <WithStyles(ListItem)
            button={true}
          >
            <WithStyles(ListItemText)
              primary="FAQ"
            />
          </WithStyles(ListItem)>
          <WithStyles(ListItem)
            button={true}
          >
            <WithStyles(ListItemText)
              primary="Report a Bug"
            />
          </WithStyles(ListItem)>
          <WithStyles(ListItem)
            button={true}
          >
            <WithStyles(ListItemText)
              primary="Contact"
            />
          </WithStyles(ListItem)>
        </WithStyles(List)>,
        "onClose": [Function],
        "open": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(ListItem)
              button={true}
            >
              <WithStyles(ListItemText)
                primary="Serif.nu"
              />
            </WithStyles(ListItem)>,
            <WithStyles(ListItem)
              button={true}
            >
              <WithStyles(ListItemText)
                primary="About"
              />
            </WithStyles(ListItem)>,
            <WithStyles(ListItem)
              button={true}
            >
              <WithStyles(ListItemText)
                primary="FAQ"
              />
            </WithStyles(ListItem)>,
            <WithStyles(ListItem)
              button={true}
            >
              <WithStyles(ListItemText)
                primary="Report a Bug"
              />
            </WithStyles(ListItem)>,
            <WithStyles(ListItem)
              button={true}
            >
              <WithStyles(ListItemText)
                primary="Contact"
              />
            </WithStyles(ListItem)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "button": true,
              "children": <WithStyles(ListItemText)
                primary="Serif.nu"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "primary": "Serif.nu",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "button": true,
              "children": <WithStyles(ListItemText)
                primary="About"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "primary": "About",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "button": true,
              "children": <WithStyles(ListItemText)
                primary="FAQ"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "primary": "FAQ",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "button": true,
              "children": <WithStyles(ListItemText)
                primary="Report a Bug"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "primary": "Report a Bug",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "button": true,
              "children": <WithStyles(ListItemText)
                primary="Contact"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "primary": "Contact",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
