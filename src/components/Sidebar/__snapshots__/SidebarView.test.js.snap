// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SidebarView changes tabs correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SidebarView
    classes={
      Object {
        "tabWidth": "",
        "wrapper": "",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(Tabs)
          indicatorColor="primary"
          onChange={[Function]}
          textColor="primary"
          value="browse"
          variant="fullWidth"
        >
          <WithStyles(Tab)
            className=""
            label="Search"
            value="search"
          />
          <WithStyles(Tab)
            className=""
            label="Browse"
            value="browse"
          />
          <WithStyles(Tab)
            className=""
            label="Cart"
            value="cart"
          />
        </WithStyles(Tabs)>,
        false,
        <Connect(Browse) />,
        false,
      ],
      "className": "",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Tab)
              className=""
              label="Search"
              value="search"
            />,
            <WithStyles(Tab)
              className=""
              label="Browse"
              value="browse"
            />,
            <WithStyles(Tab)
              className=""
              label="Cart"
              value="cart"
            />,
          ],
          "indicatorColor": "primary",
          "onChange": [Function],
          "textColor": "primary",
          "value": "browse",
          "variant": "fullWidth",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "label": "Search",
              "value": "search",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "label": "Browse",
              "value": "browse",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "label": "Cart",
              "value": "cart",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(Tabs)
            indicatorColor="primary"
            onChange={[Function]}
            textColor="primary"
            value="browse"
            variant="fullWidth"
          >
            <WithStyles(Tab)
              className=""
              label="Search"
              value="search"
            />
            <WithStyles(Tab)
              className=""
              label="Browse"
              value="browse"
            />
            <WithStyles(Tab)
              className=""
              label="Cart"
              value="cart"
            />
          </WithStyles(Tabs)>,
          false,
          <Connect(Browse) />,
          false,
        ],
        "className": "",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Tab)
                className=""
                label="Search"
                value="search"
              />,
              <WithStyles(Tab)
                className=""
                label="Browse"
                value="browse"
              />,
              <WithStyles(Tab)
                className=""
                label="Cart"
                value="cart"
              />,
            ],
            "indicatorColor": "primary",
            "onChange": [Function],
            "textColor": "primary",
            "value": "browse",
            "variant": "fullWidth",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "",
                "label": "Search",
                "value": "search",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "",
                "label": "Browse",
                "value": "browse",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "",
                "label": "Cart",
                "value": "cart",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`SidebarView changes to cart correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SidebarView
    classes={
      Object {
        "tabWidth": "",
        "wrapper": "",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(Tabs)
          indicatorColor="primary"
          onChange={[Function]}
          textColor="primary"
          value="cart"
          variant="fullWidth"
        >
          <WithStyles(Tab)
            className=""
            label="Search"
            value="search"
          />
          <WithStyles(Tab)
            className=""
            label="Browse"
            value="browse"
          />
          <WithStyles(Tab)
            className=""
            label="Cart"
            value="cart"
          />
        </WithStyles(Tabs)>,
        false,
        false,
        <Connect(Component) />,
      ],
      "className": "",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Tab)
              className=""
              label="Search"
              value="search"
            />,
            <WithStyles(Tab)
              className=""
              label="Browse"
              value="browse"
            />,
            <WithStyles(Tab)
              className=""
              label="Cart"
              value="cart"
            />,
          ],
          "indicatorColor": "primary",
          "onChange": [Function],
          "textColor": "primary",
          "value": "cart",
          "variant": "fullWidth",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "label": "Search",
              "value": "search",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "label": "Browse",
              "value": "browse",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "label": "Cart",
              "value": "cart",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(Tabs)
            indicatorColor="primary"
            onChange={[Function]}
            textColor="primary"
            value="cart"
            variant="fullWidth"
          >
            <WithStyles(Tab)
              className=""
              label="Search"
              value="search"
            />
            <WithStyles(Tab)
              className=""
              label="Browse"
              value="browse"
            />
            <WithStyles(Tab)
              className=""
              label="Cart"
              value="cart"
            />
          </WithStyles(Tabs)>,
          false,
          false,
          <Connect(Component) />,
        ],
        "className": "",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Tab)
                className=""
                label="Search"
                value="search"
              />,
              <WithStyles(Tab)
                className=""
                label="Browse"
                value="browse"
              />,
              <WithStyles(Tab)
                className=""
                label="Cart"
                value="cart"
              />,
            ],
            "indicatorColor": "primary",
            "onChange": [Function],
            "textColor": "primary",
            "value": "cart",
            "variant": "fullWidth",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "",
                "label": "Search",
                "value": "search",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "",
                "label": "Browse",
                "value": "browse",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "",
                "label": "Cart",
                "value": "cart",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`SidebarView renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SidebarView
    classes={
      Object {
        "tabWidth": "",
        "wrapper": "",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(Tabs)
          indicatorColor="primary"
          onChange={[Function]}
          textColor="primary"
          value="search"
          variant="fullWidth"
        >
          <WithStyles(Tab)
            className=""
            label="Search"
            value="search"
          />
          <WithStyles(Tab)
            className=""
            label="Browse"
            value="browse"
          />
          <WithStyles(Tab)
            className=""
            label="Cart"
            value="cart"
          />
        </WithStyles(Tabs)>,
        <Connect(Component) />,
        false,
        false,
      ],
      "className": "",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Tab)
              className=""
              label="Search"
              value="search"
            />,
            <WithStyles(Tab)
              className=""
              label="Browse"
              value="browse"
            />,
            <WithStyles(Tab)
              className=""
              label="Cart"
              value="cart"
            />,
          ],
          "indicatorColor": "primary",
          "onChange": [Function],
          "textColor": "primary",
          "value": "search",
          "variant": "fullWidth",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "label": "Search",
              "value": "search",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "label": "Browse",
              "value": "browse",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "",
              "label": "Cart",
              "value": "cart",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(Tabs)
            indicatorColor="primary"
            onChange={[Function]}
            textColor="primary"
            value="search"
            variant="fullWidth"
          >
            <WithStyles(Tab)
              className=""
              label="Search"
              value="search"
            />
            <WithStyles(Tab)
              className=""
              label="Browse"
              value="browse"
            />
            <WithStyles(Tab)
              className=""
              label="Cart"
              value="cart"
            />
          </WithStyles(Tabs)>,
          <Connect(Component) />,
          false,
          false,
        ],
        "className": "",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Tab)
                className=""
                label="Search"
                value="search"
              />,
              <WithStyles(Tab)
                className=""
                label="Browse"
                value="browse"
              />,
              <WithStyles(Tab)
                className=""
                label="Cart"
                value="cart"
              />,
            ],
            "indicatorColor": "primary",
            "onChange": [Function],
            "textColor": "primary",
            "value": "search",
            "variant": "fullWidth",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "",
                "label": "Search",
                "value": "search",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "",
                "label": "Browse",
                "value": "browse",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "",
                "label": "Cart",
                "value": "cart",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
